name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Ejecutar el flujo de trabajo cuando haya un push en la rama principal

jobs:
  deploy:
    runs-on: ubuntu-latest  # Usar el sistema operativo m치s reciente

    steps:
    # 1. Verifica el repositorio
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Configura Python
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    # 3. Instalar dependencias
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    # 4. Configura el usuario de Git para el bot de GitHub
    - name: Set up Git user for GitHub Actions bot
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    # 5. Eliminar el contenido actual de la rama gh-pages
    - name: Clean gh-pages branch
      run: |
        git fetch --all
        git checkout gh-pages
        git rm -rf .
        git commit -m "Limpiar contenido de gh-pages"
        git push origin gh-pages

    # 6. Generar la p치gina con Bokeh
    - name: Generate the Bokeh app
      run: |
        source venv/bin/activate
        bokeh serve app.py --prefix '/bokeh' --static-prefix 'static' --log-level=debug --show --port 5006 &

    # 7. Esperar que Bokeh termine de generar los archivos
    - name: Wait for Bokeh to finish
      run: sleep 10

    # 8. Crear una nueva rama gh-pages y a침adir el archivo generado
    - name: Push new content to gh-pages
      run: |
        git checkout -b gh-pages
        cp -r /path/to/generated/file/main /path/to/gh-pages
        git add .
        git commit -m "Generar nueva p치gina Bokeh"
        git push https://github-actions:${{ secrets.GH_TOKEN }}@github.com/elvisleyva49/BOKEH_LEYVA.git gh-pages
